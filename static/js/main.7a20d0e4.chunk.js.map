{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactItem/ContactItem.module.css","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","nameInputId","generate","numberInputId","handleChange","currentTarget","value","setState","reset","handleSubmit","event","props","preventDefault","onSubmit","this","className","classes","form","htmlFor","type","pattern","title","required","onChange","id","Component","Filter","filterInputId","ContactItem","onDeleteContact","contact","onClick","ContactList","contacts","map","initialContacts","App","filter","findConcurrence","enteredName","enteredNumber","find","addContact","concurrence","alert","prevState","deleteContact","contactId","changeFilter","filterValue","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a20d0e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1WhxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__A0GNP\"};","import { Component } from 'react';\r\n\r\nimport { generate } from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  static propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\n  nameInputId = generate();\r\n  numberInputId = generate();\r\n\r\n  handleChange = ({ currentTarget: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    const {\r\n      props,\r\n      state: { name, number },\r\n      reset,\r\n    } = this;\r\n    event.preventDefault();\r\n    props.onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={classes.form}>\r\n        <label htmlFor={this.nameInputId}>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          id={this.nameInputId}\r\n        />\r\n        <label htmlFor={this.numberInputId}>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={number}\r\n          onChange={this.handleChange}\r\n          id={this.numberInputId}\r\n        />\r\n        <button type=\"submit\">Add Contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import { Component } from 'react';\r\n\r\nimport { generate } from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Filter extends Component {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };\r\n\r\n  filterInputId = generate();\r\n\r\n  render() {\r\n    const { value, onChange } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <label htmlFor={this.filterInputId}>Find contacts by name</label>\r\n        <input value={value} onChange={onChange} id={this.filterInputId} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport classes from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => (\r\n  <li className={classes.contact}>\r\n    <p>\r\n      <span>{name}</span>: <span>{number}</span>\r\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </p>\r\n  </li>\r\n);\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ContactItem from './ContactItem/ContactItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        id={id}\r\n        onDeleteContact={onDeleteContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from 'react';\r\n\r\nimport { generate } from 'shortid';\r\n\r\nimport Form from 'components/Form';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\n\r\nconst initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nclass App extends Component {\r\n  state = { contacts: initialContacts, filter: '' };\r\n\r\n  findConcurrence = (enteredName, enteredNumber) =>\r\n    this.state.contacts.find(\r\n      ({ name, number }) => name === enteredName || number === enteredNumber\r\n    );\r\n\r\n  addContact = (name, number) => {\r\n    const concurrence = this.findConcurrence(name, number);\r\n    if (concurrence) {\r\n      alert(concurrence.name + ' is already in contacts.');\r\n      return;\r\n    }\r\n\r\n    const contact = { id: generate(), name, number };\r\n\r\n    this.setState((prevState) => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  changeFilter = ({ currentTarget: { value: filterValue } }) => {\r\n    this.setState({ filter: filterValue });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Form onSubmit={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}