{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactItem/ContactItem.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","redux/counter/counter-actions.js","redux/counter/counter-reducer.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","contactsEndpoint","fetchContacts","dispatch","get","then","data","catch","message","addContact","name","number","contact","post","console","log","deleteContact","id","delete","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","getIsLoadingContacts","loading","getError","error","Form","useState","setName","setNumber","useSelector","contactsSelectors","useDispatch","nameInputId","generate","numberInputId","handleChange","currentTarget","value","onSubmit","event","preventDefault","trim","alert","enteredName","enteredNumber","concurrence","find","addAction","contactsOperations","className","classes","form","htmlFor","type","pattern","title","required","onChange","Filter","filterInputId","filterValue","target","contactsActions","ContactItem","onDeleteContact","onClick","ContactList","isLoadingContacts","useEffect","map","deleteContactHandler","App","increment","decrement","valueReducer","createReducer","prevState","payload","stepReducer","counterReducer","combineReducers","step","_","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","process","rootReducer","counter","contactsReducer","store","configureStore","reducer","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d89693a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__Rio11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__pVjRq\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest'\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess'\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest'\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess'\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'https://61b44d0559c6ac0017300fbe.mockapi.io';\r\nconst contactsEndpoint = '/contacts';\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(contactsEndpoint)\r\n    .then(({ data }) => {\r\n      dispatch(fetchContactsSuccess(data));\r\n    })\r\n    .catch(({ message }) => {\r\n      dispatch(fetchContactsError(message));\r\n    });\r\n};\r\n\r\nexport const addContact = (name, number) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(contactsEndpoint, contact)\r\n    .then(({ data }) => {\r\n      console.log(data);\r\n      dispatch(addContactSuccess(data));\r\n    })\r\n    .catch(({ message }) => {\r\n      dispatch(addContactError(message));\r\n    });\r\n};\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`${contactsEndpoint}/${id}`)\r\n    .then(({ data }) => {\r\n      dispatch(deleteContactSuccess(data.id));\r\n    })\r\n    .catch(({ message }) => {\r\n      dispatch(deleteContactError(message));\r\n    });\r\n};\r\n","export const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const allContacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nexport const getIsLoadingContacts = (state) => state.contacts.loading;\r\n\r\nexport const getError = (state) => state.contacts.error;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\r\nimport { generate } from 'shortid';\r\nimport classes from './Form.module.css';\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const nameInputId = generate();\r\n  const numberInputId = generate();\r\n\r\n  const handleChange = ({ currentTarget: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const findConcurrence = (enteredName, enteredNumber) =>\r\n    contacts.find(\r\n      ({ name, number }) => name === enteredName || number === enteredNumber\r\n    );\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (name.trim() === '' || number.trim() === '') {\r\n      return alert('The fields are mandatory.');\r\n    }\r\n\r\n    const concurrence = findConcurrence(name, number);\r\n    if (concurrence) {\r\n      return alert(concurrence.name + ' is already in contacts.');\r\n    }\r\n\r\n    const addAction = contactsOperations.addContact(name, number);\r\n    dispatch(addAction);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.form}>\r\n      <label htmlFor={nameInputId}>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        value={name}\r\n        onChange={handleChange}\r\n        id={nameInputId}\r\n      />\r\n      <label htmlFor={numberInputId}>Number</label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        value={number}\r\n        onChange={handleChange}\r\n        id={numberInputId}\r\n      />\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { generate } from 'shortid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, contactsActions } from 'redux/contacts';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n  const filterInputId = generate();\r\n\r\n  const changeHandler = ({ target: { value: filterValue } }) =>\r\n    dispatch(contactsActions.changeFilter(filterValue));\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={filterInputId}>Find contacts by name</label>\r\n      <input value={value} onChange={changeHandler} id={filterInputId} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport classes from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, onDeleteContact }) => (\r\n  <li className={classes.contact}>\r\n    <p>\r\n      <span>{name}</span>: <span>{number}</span>\r\n      <button type=\"button\" onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </p>\r\n  </li>\r\n);\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\r\nimport ContactItem from './ContactItem';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const isLoadingContacts = useSelector(contactsSelectors.getIsLoadingContacts);\r\n\r\n  const error = useSelector(contactsSelectors.getError);\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const deleteContactHandler = (id) =>\r\n    dispatch(contactsOperations.deleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      {isLoadingContacts && <h2>Loading...</h2>}\r\n      {error && !isLoadingContacts && <h2>{error}</h2>}\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={() => deleteContactHandler(id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import Form from 'components/Form';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\n// import Counter from 'components/Counter';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <h1>Phonebook</h1>\r\n    <Form />\r\n\r\n    <h2>Contacts</h2>\r\n    <Filter />\r\n\r\n    <ContactList />\r\n\r\n    {/* <Counter /> */}\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const increment = createAction('counter/Increment');\r\nexport const decrement = createAction('counter/Decrement');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { increment, decrement } from './counter-actions';\r\n\r\nconst valueReducer = createReducer(0, {\r\n  [increment]: (prevState, { payload }) => prevState + payload,\r\n  [decrement]: (prevState, { payload }) => prevState - payload,\r\n});\r\n\r\nconst stepReducer = createReducer(15, {});\r\n\r\nconst counterReducer = combineReducers({\r\n  value: valueReducer,\r\n  step: stepReducer,\r\n});\r\n\r\nexport default counterReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  changeFilter,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (prevState, { payload }) => [payload, ...prevState],\r\n  [deleteContactSuccess]: (prevState, { payload }) =>\r\n    prevState.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactRequest]: () => null,\r\n  [addContactSuccess]: () => null,\r\n  [deleteContactRequest]: () => null,\r\n  [deleteContactSuccess]: () => null,\r\n  [fetchContactsRequest]: () => null,\r\n  [fetchContactsSuccess]: () => null,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading, error });\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport counterReducer from './counter/counter-reducer';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  process.env.NODE_ENV === 'development' &&\r\n    require('redux-logger').createLogger(),\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: counterReducer,\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// const persistedStore = { store, persistor };\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/base.css';\r\nimport App from './App';\r\n// import ContactsContext from 'context/ContactsProvider';\r\n// import FilterContext from 'context/FilterProvider';\r\nimport store from 'redux/store';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <ContactsContext>\r\n      <FilterContext> */}\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={<p>Loading...</p>} persistor={store.persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n    {/* </FilterContext>\r\n    </ContactsContext> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}